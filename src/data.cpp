#include "constants.h"
#include "data.h"

Data::Data(int cohLvl)
{
    this->hcData = {
        {
            82.0, 81.0, 85.97, 86.91, 85.79, 90.59, 93.29, 91.88, 96.35, 95.67,
            98.83, 98.82, 99.64, 99.27, 97.71, 99.95, 100.99, 97.83, 100.48, 99.93,
            100.19, 97.26, 94.17, 93.91, 92.51, 91.97, 88.31, 88.55, 84.7, 86.78,
            83.82, 80.83, 80.83, 78.85, 73.89, 71.98, 71.15, 68.4, 68.76, 66.24,
            66.86, 63.63, 63.57, 63.68, 59.97, 60.45, 62.13, 58.0, 60.08, 58.35,
            58.82, 63.48, 64.33, 61.35, 62.54, 63.89, 68.37, 70.99, 71.71, 72.52,
            75.41, 77.36, 80.34, 79.34, 83.33, 85.3, 84.23, 90.1, 91.88, 92.57,
            91.14, 92.58, 93.87, 96.01, 95.97, 96.76, 98.36, 100.76, 100.97, 97.98,
            99.79, 101.4, 98.81, 100.04, 98.09, 94.97, 92.69, 92.26, 91.7, 88.02,
            87.24, 85.38, 84.46, 81.49, 81.5, 76.5, 78.51, 72.56, 72.67, 72.85,
            70.12, 66.5, 64.0, 63.65, 62.44, 63.41, 60.54, 58.87, 61.38, 60.09,
            62.0, 60.11, 60.42, 59.92, 59.61, 61.49, 65.54, 66.76, 65.13, 66.64,
            69.27, 69.01, 73.84, 76.74, 77.69, 80.67, 81.67, 82.66, 83.63, 88.55,
            86.4, 89.17, 93.84, 95.39, 92.81, 95.08, 96.18, 97.12, 97.87, 101.44,
            99.81, 98.99, 98.96, 97.74, 101.31, 96.7, 99.9, 96.91, 93.77, 94.46,
            93.01, 92.42, 91.73, 85.93, 88.06, 85.13, 83.16, 78.16, 78.16, 78.18,
            73.24, 72.36, 70.55, 67.84, 67.24, 63.76, 65.43, 61.26, 63.25, 60.42,
            59.77, 61.32, 58.06, 62.0, 62.15, 59.49, 61.02, 62.75, 60.66, 65.74,
            66.98, 64.37, 66.9, 67.55, 69.31, 75.15, 77.06, 75.02, 78.01, 83.01,
            84.0, 86.96, 86.87, 87.71, 91.46, 92.11, 94.64, 95.03, 96.27, 95.35
        },
        {
            12.12, 11.35, 6.7, 11.35, 1.6, 11.35, 9.8, 6.7, 6.7, 12.9,
            16.0, 8.25, 9.8, 14.45, 14.45, 8.25, 9.8, 9.8, 8.25, 11.35,
            9.8, 9.8, 3.3, 9.8, 12.9, 9.8, 12.9, 8.25, 12.9, 3.10,
            12.9, 9.8, 2.15, 9.8, 12.9, 11.35, 14.45, 12.9, 6.7, 9.66
        },
    };

    this->mcData = {
        {
            85.0, 83.0, 78.97, 80.91, 92.79, 92.59, 94.29, 96.88, 98.35, 97.67,
            99.83, 102.82, 94.64, 101.27, 101.71, 100.95, 100.99, 104.83, 102.48, 102.93,
            98.19, 93.26, 96.17, 90.91, 89.51, 94.97, 88.31, 88.55, 89.7, 89.78,
            81.82, 81.83, 75.83, 78.85, 76.89, 67.98, 70.15, 64.4, 72.76, 61.24,
            68.86, 68.63, 57.57, 57.68, 55.97, 64.45, 65.13, 56.0, 65.08, 62.35,
            61.82, 61.48, 62.33, 67.35, 67.54, 70.89, 63.37, 73.99, 72.71, 68.52,
            79.41, 74.36, 81.34, 82.34, 80.33, 86.3, 90.23, 93.1, 90.88, 91.57,
            94.14, 97.58, 100.87, 97.01, 93.97, 102.76, 94.36, 101.76, 94.97, 102.98,
            101.79, 102.4, 96.81, 103.04, 101.09, 94.97, 92.69, 93.26, 90.7, 94.02,
            90.24, 90.38, 87.46, 82.49, 84.5, 77.5, 77.51, 78.56, 73.67, 70.85,
            67.12, 69.5, 67.0, 63.65, 65.44, 66.41, 61.54, 59.87, 56.38, 58.09,
            65.0, 55.11, 61.42, 65.92, 57.61, 58.49, 61.54, 67.76, 71.13, 65.64,
            70.27, 73.01, 71.84, 74.74, 80.69, 83.67, 79.67, 84.66, 88.63, 90.55,
            91.4, 91.17, 89.84, 94.39, 90.81, 101.08, 93.18, 100.12, 99.87, 95.44,
            101.81, 95.99, 101.96, 95.74, 95.31, 93.7, 92.9, 94.91, 95.77, 94.46,
            92.01, 90.42, 86.73, 85.93, 90.06, 79.13, 86.16, 85.16, 77.16, 81.18,
            79.24, 76.36, 73.55, 64.84, 63.24, 62.76, 60.43, 67.26, 64.25, 64.42,
            56.77, 57.32, 59.06, 57.0, 58.15, 55.49, 64.02, 57.75, 62.66, 65.74,
            61.98, 68.37, 66.9, 70.55, 72.31, 68.15, 71.06, 73.02, 76.01, 81.01,
            81.0, 82.96, 85.87, 93.71, 93.46, 87.11, 93.64, 96.03, 97.27, 96.35
        },
        {
            4.2, 3.56, 3.24, 3.08, 3.4, 2.76, 3.08, 4.2, 4.68, 3.72,
            2.92, 4.2, 2.76, 2.76, 3.56, 3.72, 3.4, 2.44, 2.92, 2.28,
            2.6, 2.92, 4.04, 3.08, 2.92, 3.24, 3.08, 3.08, 4.04, 2.28,
            3.4, 4.2, 3.88, 3.72, 3.24, 2.92, 2.6, 3.08, 3.56, 1.79
        }
    };

    this->lcData = {
        {
            80.0, 86.0, 74.97, 85.91, 92.79, 87.59, 84.29, 91.88, 100.35, 85.67,
            87.83, 99.82, 99.64, 90.27, 98.71, 98.95, 102.99, 92.83, 104.48, 96.93,
            95.19, 101.26, 106.17, 98.91, 103.51, 90.97, 96.31, 85.55, 83.7, 75.78,
            86.82, 71.83, 82.83, 80.85, 74.89, 66.98, 64.15, 71.4, 75.76, 62.24,
            71.86, 57.63, 67.57, 64.68, 62.97, 59.45, 69.13, 63.0, 58.08, 51.35,
            67.82, 64.48, 61.33, 67.35, 63.54, 64.89, 67.37, 74.99, 73.71, 64.52,
            64.41, 69.36, 86.34, 73.34, 90.33, 91.3, 79.23, 94.1, 91.88, 87.57,
            97.14, 84.58, 101.87, 89.01, 97.97, 96.76, 104.36, 98.76, 108.97, 90.98,
            96.79, 95.4, 90.81, 107.04, 95.09, 94.97, 88.69, 93.26, 95.7, 92.02,
            84.24, 81.38, 82.46, 90.49, 83.5, 69.5, 67.51, 77.56, 68.67, 61.85,
            70.12, 59.5, 65.0, 57.65, 73.44, 55.41, 68.54, 60.87, 70.38, 68.09,
            66.0, 69.11, 67.42, 66.92, 70.61, 57.49, 53.54, 73.76, 69.13, 57.64,
            79.27, 70.01, 81.84, 80.74, 75.69, 76.67, 74.67, 77.66, 82.63, 88.55,
            89.4, 87.17, 86.84, 86.39, 104.81, 105.08, 106.18, 89.12, 94.87, 91.44,
            95.81, 97.99, 100.96, 98.74, 106.31, 98.7, 94.9, 92.91, 98.77, 95.46,
            86.01, 101.42, 88.73, 94.93, 91.06, 91.13, 86.16, 86.16, 79.16, 83.18,
            67.24, 63.36, 64.55, 67.84, 67.24, 59.76, 72.43, 60.26, 66.25, 67.42,
            57.77, 53.32, 52.06, 66.0, 53.15, 61.49, 55.02, 68.75, 55.66, 70.74,
            54.98, 63.37, 72.9, 71.55, 76.31, 71.15, 81.06, 79.02, 79.01, 89.01,
            91.0, 93.96, 83.87, 89.71, 90.46, 94.11, 92.64, 104.03, 94.27, 92.35
        },
        {
            1.17, 1.82, 1.06, 1.3, 1.66, 1.5, 1.42, 1.62, 1.18, 1.7,
            0.9, 1.58, 1.98, 1.42, 1.54, 1.58, 1.46, 1.14, 1.58, 1.54,
            1.82, 1.74, 1.94, 2.18, 1.26, 1.14, 1.86, 1.86, 0.94, 4.2,
            1.7, 1.5, 1.38, 1.46, 1.66, 1.98, 1.18, 1.46, 1.1, 1.42
        }
    };

    if (cohLvl == HIGH_COH) activeData = &this->hcData;
    if (cohLvl == MED_COH) activeData = &this->mcData;
    if (cohLvl == LOW_COH) activeData = &this->lcData;
}

double Data::getHeartRate(int t){
    if ((unsigned)t > (*activeData)[0].size()) return -1;
    return (*activeData)[0][t];
}

double Data::getCoherence(int t){
    if (t < 5 || (unsigned)t > (*activeData)[0].size()) return -1;
    int index = t / 5;
    return (*activeData)[1][index];
}

